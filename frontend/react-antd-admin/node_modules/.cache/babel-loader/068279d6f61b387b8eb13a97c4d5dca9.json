{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n/* eslint-disable */\nimport * as actionTypes from '../constants';\n\nconst tagList = (state = [], action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TAG:\n      let arr = [...state, action.data];\n      let hash = {}; // 去除数组里的重复对象\n\n      let newArr = arr.reduce((item, next) => {\n        hash[next.path] ? '' : hash[next.path] = true && item.push(next);\n        return item;\n      }, []);\n      return newArr;\n      break;\n\n    case actionTypes.REMOVE_TAG:\n      return state.filter(item => {\n        if (item.path !== action.data) {\n          return item;\n        }\n      });\n      break;\n\n    case actionTypes.EMPTY_TAG:\n      return state = [];\n      break;\n\n    default:\n      return state;\n  }\n};\n\nconst _default = tagList;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(tagList, \"tagList\", \"/Users/johnlee/Documents/GitHub/pharmX/frontend/react-antd-admin/src/redux/reducers/tagList.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/johnlee/Documents/GitHub/pharmX/frontend/react-antd-admin/src/redux/reducers/tagList.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/johnlee/Documents/GitHub/pharmX/frontend/react-antd-admin/src/redux/reducers/tagList.js"],"names":["actionTypes","tagList","state","action","type","ADD_TAG","arr","data","hash","newArr","reduce","item","next","path","push","REMOVE_TAG","filter","EMPTY_TAG"],"mappings":";;;;;;;;;AAAA;AACA,OAAO,KAAKA,WAAZ,MAA6B,cAA7B;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKJ,WAAW,CAACK,OAAjB;AACC,UAAIC,GAAG,GAAG,CAAC,GAAGJ,KAAJ,EAAWC,MAAM,CAACI,IAAlB,CAAV;AACA,UAAIC,IAAI,GAAG,EAAX,CAFD,CAGC;;AACA,UAAIC,MAAM,GAAGH,GAAG,CAACI,MAAJ,CAAW,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACvCJ,QAAAA,IAAI,CAACI,IAAI,CAACC,IAAN,CAAJ,GAAkB,EAAlB,GAAwBL,IAAI,CAACI,IAAI,CAACC,IAAN,CAAJ,GAAkB,QAAQF,IAAI,CAACG,IAAL,CAAUF,IAAV,CAAlD;AACA,eAAOD,IAAP;AACA,OAHY,EAGV,EAHU,CAAb;AAIA,aAAOF,MAAP;AACA;;AACD,SAAKT,WAAW,CAACe,UAAjB;AACC,aAAOb,KAAK,CAACc,MAAN,CAAaL,IAAI,IAAI;AAC3B,YAAIA,IAAI,CAACE,IAAL,KAAcV,MAAM,CAACI,IAAzB,EAA+B;AAC9B,iBAAOI,IAAP;AACA;AACD,OAJM,CAAP;AAKA;;AACD,SAAKX,WAAW,CAACiB,SAAjB;AACC,aAAQf,KAAK,GAAG,EAAhB;AACA;;AACD;AACC,aAAOA,KAAP;AAtBF;AAwBA,CAzBD;;iBA2BeD,O;AAAf;;;;;;;;;;0BA3BMA,O","sourcesContent":["/* eslint-disable */\nimport * as actionTypes from '../constants';\nconst tagList = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.ADD_TAG:\n\t\t\tlet arr = [...state, action.data];\n\t\t\tlet hash = {};\n\t\t\t// 去除数组里的重复对象\n\t\t\tlet newArr = arr.reduce((item, next) => {\n\t\t\t\thash[next.path] ? '' : (hash[next.path] = true && item.push(next));\n\t\t\t\treturn item;\n\t\t\t}, []);\n\t\t\treturn newArr;\n\t\t\tbreak;\n\t\tcase actionTypes.REMOVE_TAG:\n\t\t\treturn state.filter(item => {\n\t\t\t\tif (item.path !== action.data) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t});\n\t\t\tbreak;\n\t\tcase actionTypes.EMPTY_TAG:\n\t\t\treturn (state = []);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default tagList;\n"]},"metadata":{},"sourceType":"module"}