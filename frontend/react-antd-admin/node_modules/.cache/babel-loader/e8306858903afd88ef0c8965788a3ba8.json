{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nfunction debounce(func, wait, immediate) {\n  let timeout, args, context, timestamp, result;\n\n  const later = function () {\n    // 据上一次触发时间间隔\n    const last = +new Date() - timestamp; // 上次被包装函数被调用时间间隔last小于设定时间间隔wait\n\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null; // 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用\n\n      if (!immediate) {\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    }\n  };\n\n  return function (...args) {\n    context = this;\n    timestamp = +new Date();\n    const callNow = immediate && !timeout; // 如果延时不存在，重新设定延时\n\n    if (!timeout) timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n} // 数组去重\n\n\nconst unique = arr => {\n  const res = [];\n  const json = {};\n\n  for (let i = 0; i < arr.length; i++) {\n    if (!json[arr[i]]) {\n      res.push(arr[i]);\n      json[arr[i]] = 1;\n    }\n  }\n\n  return res;\n};\n\nexport { unique, debounce };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(debounce, \"debounce\", \"/Users/johnlee/Documents/GitHub/pharmX/frontend/react-antd-admin/src/utils/index.js\");\n  reactHotLoader.register(unique, \"unique\", \"/Users/johnlee/Documents/GitHub/pharmX/frontend/react-antd-admin/src/utils/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/johnlee/Documents/GitHub/pharmX/frontend/react-antd-admin/src/utils/index.js"],"names":["debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","setTimeout","apply","callNow","unique","arr","res","json","i","length","push"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,SAA9B,EAAyC;AACxC,MAAIC,OAAJ,EAAaC,IAAb,EAAmBC,OAAnB,EAA4BC,SAA5B,EAAuCC,MAAvC;;AAEA,QAAMC,KAAK,GAAG,YAAW;AACxB;AACA,UAAMC,IAAI,GAAG,CAAC,IAAIC,IAAJ,EAAD,GAAcJ,SAA3B,CAFwB,CAIxB;;AACA,QAAIG,IAAI,GAAGR,IAAP,IAAeQ,IAAI,GAAG,CAA1B,EAA6B;AAC5BN,MAAAA,OAAO,GAAGQ,UAAU,CAACH,KAAD,EAAQP,IAAI,GAAGQ,IAAf,CAApB;AACA,KAFD,MAEO;AACNN,MAAAA,OAAO,GAAG,IAAV,CADM,CAEN;;AACA,UAAI,CAACD,SAAL,EAAgB;AACfK,QAAAA,MAAM,GAAGP,IAAI,CAACY,KAAL,CAAWP,OAAX,EAAoBD,IAApB,CAAT;AACA,YAAI,CAACD,OAAL,EAAcE,OAAO,GAAGD,IAAI,GAAG,IAAjB;AACd;AACD;AACD,GAfD;;AAiBA,SAAO,UAAS,GAAGA,IAAZ,EAAkB;AACxBC,IAAAA,OAAO,GAAG,IAAV;AACAC,IAAAA,SAAS,GAAG,CAAC,IAAII,IAAJ,EAAb;AACA,UAAMG,OAAO,GAAGX,SAAS,IAAI,CAACC,OAA9B,CAHwB,CAIxB;;AACA,QAAI,CAACA,OAAL,EAAcA,OAAO,GAAGQ,UAAU,CAACH,KAAD,EAAQP,IAAR,CAApB;;AACd,QAAIY,OAAJ,EAAa;AACZN,MAAAA,MAAM,GAAGP,IAAI,CAACY,KAAL,CAAWP,OAAX,EAAoBD,IAApB,CAAT;AACAC,MAAAA,OAAO,GAAGD,IAAI,GAAG,IAAjB;AACA;;AAED,WAAOG,MAAP;AACA,GAZD;AAaA,C,CAED;;;AACA,MAAMO,MAAM,GAAGC,GAAG,IAAI;AACrB,QAAMC,GAAG,GAAG,EAAZ;AACA,QAAMC,IAAI,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACpC,QAAI,CAACD,IAAI,CAACF,GAAG,CAACG,CAAD,CAAJ,CAAT,EAAmB;AAClBF,MAAAA,GAAG,CAACI,IAAJ,CAASL,GAAG,CAACG,CAAD,CAAZ;AACAD,MAAAA,IAAI,CAACF,GAAG,CAACG,CAAD,CAAJ,CAAJ,GAAe,CAAf;AACA;AACD;;AACD,SAAOF,GAAP;AACA,CAVD;;AAYA,SAASF,MAAT,EAAiBf,QAAjB;;;;;;;;;;0BAhDSA,Q;0BAoCHe,M","sourcesContent":["function debounce(func, wait, immediate) {\n\tlet timeout, args, context, timestamp, result;\n\n\tconst later = function() {\n\t\t// 据上一次触发时间间隔\n\t\tconst last = +new Date() - timestamp;\n\n\t\t// 上次被包装函数被调用时间间隔last小于设定时间间隔wait\n\t\tif (last < wait && last > 0) {\n\t\t\ttimeout = setTimeout(later, wait - last);\n\t\t} else {\n\t\t\ttimeout = null;\n\t\t\t// 如果设定为immediate===true，因为开始边界已经调用过了此处无需调用\n\t\t\tif (!immediate) {\n\t\t\t\tresult = func.apply(context, args);\n\t\t\t\tif (!timeout) context = args = null;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn function(...args) {\n\t\tcontext = this;\n\t\ttimestamp = +new Date();\n\t\tconst callNow = immediate && !timeout;\n\t\t// 如果延时不存在，重新设定延时\n\t\tif (!timeout) timeout = setTimeout(later, wait);\n\t\tif (callNow) {\n\t\t\tresult = func.apply(context, args);\n\t\t\tcontext = args = null;\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\n// 数组去重\nconst unique = arr => {\n\tconst res = [];\n\tconst json = {};\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tif (!json[arr[i]]) {\n\t\t\tres.push(arr[i]);\n\t\t\tjson[arr[i]] = 1;\n\t\t}\n\t}\n\treturn res;\n};\n\nexport { unique, debounce };\n"]},"metadata":{},"sourceType":"module"}