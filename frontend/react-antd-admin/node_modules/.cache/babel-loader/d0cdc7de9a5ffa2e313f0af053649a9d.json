{"ast":null,"code":"import \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nvar _jsxFileName = \"/Users/johnlee/Desktop/react-antd-admin/src/components/FullScreen.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nexport default class FullScreen extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFullScreen: false\n    };\n\n    this.handleFullScrren = () => {\n      !this.state.isFullScreen ? this.requestFullScreen() : this.exitFullscreen();\n    };\n\n    this.requestFullScreen = () => {\n      let de = document.documentElement;\n\n      if (de.requestFullscreen) {\n        de.requestFullscreen();\n      } else if (de.mozRequestFullScreen) {\n        de.mozRequestFullScreen();\n      } else if (de.webkitRequestFullScreen) {\n        de.webkitRequestFullScreen();\n      }\n    };\n\n    this.exitFullscreen = () => {\n      let de = document;\n\n      if (de.exitFullscreen) {\n        de.exitFullscreen();\n      } else if (de.mozCancelFullScreen) {\n        de.mozCancelFullScreen();\n      } else if (de.webkitCancelFullScreen) {\n        de.webkitCancelFullScreen();\n      }\n    };\n\n    this.watchFullScreen = () => {\n      document.addEventListener('fullscreenchange', () => {\n        this.setState({\n          isFullScreen: document.fullscreen\n        });\n      }, false);\n      document.addEventListener('mozfullscreenchange', () => {\n        this.setState({\n          isFullScreen: document.mozFullScreen\n        });\n      }, false);\n      document.addEventListener('webkitfullscreenchange', () => {\n        this.setState({\n          isFullScreen: document.webkitIsFullScreen\n        });\n      }, false);\n    };\n  }\n\n  componentDidMount() {\n    this.watchFullScreen();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(_Icon, {\n      style: {\n        fontSize: '20px',\n        cursor: 'pointer'\n      },\n      type: \"fullscreen\",\n      onClick: this.handleFullScrren\n    });\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(FullScreen, \"FullScreen\", \"/Users/johnlee/Desktop/react-antd-admin/src/components/FullScreen.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/johnlee/Desktop/react-antd-admin/src/components/FullScreen.js"],"names":["React","FullScreen","Component","state","isFullScreen","handleFullScrren","requestFullScreen","exitFullscreen","de","document","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","mozCancelFullScreen","webkitCancelFullScreen","watchFullScreen","addEventListener","setState","fullscreen","mozFullScreen","webkitIsFullScreen","componentDidMount","render","fontSize","cursor"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,eAAe,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvDC,KADuD,GAC/C;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAD+C;;AAAA,SAOvDC,gBAPuD,GAOpC,MAAM;AACxB,OAAC,KAAKF,KAAL,CAAWC,YAAZ,GAA2B,KAAKE,iBAAL,EAA3B,GAAsD,KAAKC,cAAL,EAAtD;AACA,KATsD;;AAAA,SAYvDD,iBAZuD,GAYnC,MAAM;AACzB,UAAIE,EAAE,GAAGC,QAAQ,CAACC,eAAlB;;AACA,UAAIF,EAAE,CAACG,iBAAP,EAA0B;AACzBH,QAAAA,EAAE,CAACG,iBAAH;AACA,OAFD,MAEO,IAAIH,EAAE,CAACI,oBAAP,EAA6B;AACnCJ,QAAAA,EAAE,CAACI,oBAAH;AACA,OAFM,MAEA,IAAIJ,EAAE,CAACK,uBAAP,EAAgC;AACtCL,QAAAA,EAAE,CAACK,uBAAH;AACA;AACD,KArBsD;;AAAA,SAuBvDN,cAvBuD,GAuBtC,MAAM;AACtB,UAAIC,EAAE,GAAGC,QAAT;;AACA,UAAID,EAAE,CAACD,cAAP,EAAuB;AACtBC,QAAAA,EAAE,CAACD,cAAH;AACA,OAFD,MAEO,IAAIC,EAAE,CAACM,mBAAP,EAA4B;AAClCN,QAAAA,EAAE,CAACM,mBAAH;AACA,OAFM,MAEA,IAAIN,EAAE,CAACO,sBAAP,EAA+B;AACrCP,QAAAA,EAAE,CAACO,sBAAH;AACA;AACD,KAhCsD;;AAAA,SAmCvDC,eAnCuD,GAmCrC,MAAM;AACvBP,MAAAA,QAAQ,CAACQ,gBAAT,CACC,kBADD,EAEC,MAAM;AACL,aAAKC,QAAL,CAAc;AAAEd,UAAAA,YAAY,EAAEK,QAAQ,CAACU;AAAzB,SAAd;AACA,OAJF,EAKC,KALD;AAOAV,MAAAA,QAAQ,CAACQ,gBAAT,CACC,qBADD,EAEC,MAAM;AACL,aAAKC,QAAL,CAAc;AAAEd,UAAAA,YAAY,EAAEK,QAAQ,CAACW;AAAzB,SAAd;AACA,OAJF,EAKC,KALD;AAOAX,MAAAA,QAAQ,CAACQ,gBAAT,CACC,wBADD,EAEC,MAAM;AACL,aAAKC,QAAL,CAAc;AAAEd,UAAAA,YAAY,EAAEK,QAAQ,CAACY;AAAzB,SAAd;AACA,OAJF,EAKC,KALD;AAOA,KAzDsD;AAAA;;AAGvDC,EAAAA,iBAAiB,GAAG;AACnB,SAAKN,eAAL;AACA;;AAsDDO,EAAAA,MAAM,GAAG;AACR,wBAAO;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,MAAM,EAAE;AAA5B,OAAb;AAAsD,MAAA,IAAI,EAAC,YAA3D;AAAwE,MAAA,OAAO,EAAE,KAAKpB;AAAtF,MAAP;AACA;;AA7DsD;AAAA;AAAA;AAAA;AAAA;;AAAA;;;;;;;;;;0BAAnCJ,U","sourcesContent":["import React from 'react';\nimport { Icon } from 'antd';\n\nexport default class FullScreen extends React.Component {\n\tstate = { isFullScreen: false };\n\n\tcomponentDidMount() {\n\t\tthis.watchFullScreen();\n\t}\n\n\thandleFullScrren = () => {\n\t\t!this.state.isFullScreen ? this.requestFullScreen() : this.exitFullscreen();\n\t};\n\n\t// 进入全屏\n\trequestFullScreen = () => {\n\t\tlet de = document.documentElement;\n\t\tif (de.requestFullscreen) {\n\t\t\tde.requestFullscreen();\n\t\t} else if (de.mozRequestFullScreen) {\n\t\t\tde.mozRequestFullScreen();\n\t\t} else if (de.webkitRequestFullScreen) {\n\t\t\tde.webkitRequestFullScreen();\n\t\t}\n\t};\n\t// 退出全屏\n\texitFullscreen = () => {\n\t\tlet de = document;\n\t\tif (de.exitFullscreen) {\n\t\t\tde.exitFullscreen();\n\t\t} else if (de.mozCancelFullScreen) {\n\t\t\tde.mozCancelFullScreen();\n\t\t} else if (de.webkitCancelFullScreen) {\n\t\t\tde.webkitCancelFullScreen();\n\t\t}\n\t};\n\n\t// 监听fullscreenchange事件\n\twatchFullScreen = () => {\n\t\tdocument.addEventListener(\n\t\t\t'fullscreenchange',\n\t\t\t() => {\n\t\t\t\tthis.setState({ isFullScreen: document.fullscreen });\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\t\tdocument.addEventListener(\n\t\t\t'mozfullscreenchange',\n\t\t\t() => {\n\t\t\t\tthis.setState({ isFullScreen: document.mozFullScreen });\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\t\tdocument.addEventListener(\n\t\t\t'webkitfullscreenchange',\n\t\t\t() => {\n\t\t\t\tthis.setState({ isFullScreen: document.webkitIsFullScreen });\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\t};\n\n\trender() {\n\t\treturn <Icon style={{ fontSize: '20px', cursor: 'pointer' }} type=\"fullscreen\" onClick={this.handleFullScrren} />;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}