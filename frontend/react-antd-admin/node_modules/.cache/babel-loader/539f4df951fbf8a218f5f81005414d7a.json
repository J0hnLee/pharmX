{"ast":null,"code":"import \"antd/lib/message/style/css\";\nimport _message from \"antd/lib/message\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport axios from 'axios';\nconst $axios = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  timeout: 6000,\n  retry: 4,\n  retryDelay: 1000\n}); //请求拦截\n\n$axios.interceptors.request.use(function (config) {\n  // 在发送请求之前做些什么\n  // 通过reudx的store拿到拿到全局状态树的token ，添加到请求报文，后台会根据该报文返回status\n  // 此处应根据具体业务写token\n  // const token = store.getState().user.token || localStorage.getItem('token');\n  const token = 'FA2019';\n  config.headers['X-Token'] = token;\n  return config;\n}, function (error) {\n  // 对请求错误做些什么\n  _message.error(error);\n\n  return Promise.reject(error);\n}); // 添加响应拦截器\n\n$axios.interceptors.response.use(function (response) {\n  // 对响应数据做点什么\n  if (response.data.success === false) {\n    _message.error(response.data.message);\n  }\n\n  return response;\n}, function (error) {\n  if (error.code === 'ECONNABORTED' && error.message.indexOf('timeout') !== -1) {\n    var config = error.config;\n    config.__retryCount = config.__retryCount || 0;\n\n    if (config.__retryCount >= config.retry) {\n      // Reject with the error\n      //window.location.reload();\n      return Promise.reject(error);\n    } // Increase the retry count\n\n\n    config.__retryCount += 1; // Create new promise to handle exponential backoff\n\n    var backoff = new Promise(function (resolve) {\n      setTimeout(function () {\n        //console.log('resolve');\n        resolve();\n      }, config.retryDelay || 1);\n    });\n    return backoff.then(function () {\n      return axios(config);\n    });\n  } else {\n    return Promise.reject(error);\n  }\n});\nconst _default = $axios;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register($axios, \"$axios\", \"/Users/johnlee/Desktop/react-antd-admin/src/axios/$axios.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/johnlee/Desktop/react-antd-admin/src/axios/$axios.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/johnlee/Desktop/react-antd-admin/src/axios/$axios.js"],"names":["axios","$axios","create","baseURL","process","env","REACT_APP_BASE_URL","timeout","retry","retryDelay","interceptors","request","use","config","token","headers","error","Promise","reject","response","data","success","message","code","indexOf","__retryCount","backoff","resolve","setTimeout","then"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,kBADM;AAE3BC,EAAAA,OAAO,EAAE,IAFkB;AAG3BC,EAAAA,KAAK,EAAC,CAHqB;AAI3BC,EAAAA,UAAU,EAAC;AAJgB,CAAb,CAAf,C,CAOA;;AACAR,MAAM,CAACS,YAAP,CAAoBC,OAApB,CAA4BC,GAA5B,CACC,UAASC,MAAT,EAAiB;AAChB;AACA;AACA;AACA;AACA,QAAMC,KAAK,GAAG,QAAd;AACAD,EAAAA,MAAM,CAACE,OAAP,CAAe,SAAf,IAA4BD,KAA5B;AACA,SAAOD,MAAP;AACA,CATF,EAUC,UAASG,KAAT,EAAgB;AACf;AACA,WAAQA,KAAR,CAAcA,KAAd;;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,CAdF,E,CAiBA;;AACAf,MAAM,CAACS,YAAP,CAAoBS,QAApB,CAA6BP,GAA7B,CACC,UAASO,QAAT,EAAmB;AAClB;AACA,MAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAd,KAA0B,KAA9B,EAAqC;AACpC,aAAQL,KAAR,CAAcG,QAAQ,CAACC,IAAT,CAAcE,OAA5B;AACA;;AACD,SAAOH,QAAP;AACA,CAPF,EAQC,UAASH,KAAT,EAAgB;AACf,MAAIA,KAAK,CAACO,IAAN,KAAe,cAAf,IAAiCP,KAAK,CAACM,OAAN,CAAcE,OAAd,CAAsB,SAAtB,MAAqC,CAAC,CAA3E,EAA8E;AAC7E,QAAIX,MAAM,GAAGG,KAAK,CAACH,MAAnB;AACAA,IAAAA,MAAM,CAACY,YAAP,GAAsBZ,MAAM,CAACY,YAAP,IAAuB,CAA7C;;AAEA,QAAIZ,MAAM,CAACY,YAAP,IAAuBZ,MAAM,CAACL,KAAlC,EAAyC;AACxC;AACA;AACA,aAAOS,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,KAR4E,CAU7E;;;AACAH,IAAAA,MAAM,CAACY,YAAP,IAAuB,CAAvB,CAX6E,CAa7E;;AACA,QAAIC,OAAO,GAAG,IAAIT,OAAJ,CAAY,UAASU,OAAT,EAAkB;AAC3CC,MAAAA,UAAU,CAAC,YAAW;AACrB;AACAD,QAAAA,OAAO;AACP,OAHS,EAGPd,MAAM,CAACJ,UAAP,IAAqB,CAHd,CAAV;AAIA,KALa,CAAd;AAOA,WAAOiB,OAAO,CAACG,IAAR,CAAa,YAAW;AAC9B,aAAO7B,KAAK,CAACa,MAAD,CAAZ;AACA,KAFM,CAAP;AAGA,GAxBD,MAwBO;AACN,WAAOI,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA;AACD,CApCF;iBAuCef,M;AAAf;;;;;;;;;;0BAjEMA,M","sourcesContent":["import axios from 'axios';\nimport { message } from 'antd';\nconst $axios = axios.create({\n\tbaseURL: process.env.REACT_APP_BASE_URL,\n\ttimeout: 6000,\n\tretry:4,\n\tretryDelay:1000\n});\n\n//请求拦截\n$axios.interceptors.request.use(\n\tfunction(config) {\n\t\t// 在发送请求之前做些什么\n\t\t// 通过reudx的store拿到拿到全局状态树的token ，添加到请求报文，后台会根据该报文返回status\n\t\t// 此处应根据具体业务写token\n\t\t// const token = store.getState().user.token || localStorage.getItem('token');\n\t\tconst token = 'FA2019';\n\t\tconfig.headers['X-Token'] = token;\n\t\treturn config;\n\t},\n\tfunction(error) {\n\t\t// 对请求错误做些什么\n\t\tmessage.error(error);\n\t\treturn Promise.reject(error);\n\t}\n);\n\n// 添加响应拦截器\n$axios.interceptors.response.use(\n\tfunction(response) {\n\t\t// 对响应数据做点什么\n\t\tif (response.data.success === false) {\n\t\t\tmessage.error(response.data.message);\n\t\t}\n\t\treturn response;\n\t},\n\tfunction(error) {\n\t\tif (error.code === 'ECONNABORTED' && error.message.indexOf('timeout') !== -1) {\n\t\t\tvar config = error.config;\n\t\t\tconfig.__retryCount = config.__retryCount || 0;\n\n\t\t\tif (config.__retryCount >= config.retry) {\n\t\t\t\t// Reject with the error\n\t\t\t\t//window.location.reload();\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\n\t\t\t// Increase the retry count\n\t\t\tconfig.__retryCount += 1;\n\n\t\t\t// Create new promise to handle exponential backoff\n\t\t\tvar backoff = new Promise(function(resolve) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t//console.log('resolve');\n\t\t\t\t\tresolve();\n\t\t\t\t}, config.retryDelay || 1);\n\t\t\t});\n\n\t\t\treturn backoff.then(function() {\n\t\t\t\treturn axios(config);\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.reject(error);\n\t\t}\n\t}\n);\n\nexport default $axios;\n"]},"metadata":{},"sourceType":"module"}