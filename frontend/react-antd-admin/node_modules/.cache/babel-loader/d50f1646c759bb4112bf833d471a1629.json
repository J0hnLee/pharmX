{"ast":null,"code":"import \"antd/lib/table/style/css\";\nimport _Table from \"antd/lib/table\";\nvar _jsxFileName = \"/Users/johnlee/Desktop/pharmPOS/react-antd-admin/src/views/table/TableBasic.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { Component } from 'react';\nimport $axios from '../../axios/$axios';\n\nclass TableBasic extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      pagination: {},\n      loading: false,\n      selectedRowKeys: [],\n      columns: [{\n        title: 'Name',\n        dataIndex: 'name',\n        sorter: true,\n        render: name => `${name.first} ${name.last}`,\n        width: '20%'\n      }, {\n        title: 'Gender',\n        dataIndex: 'gender',\n        filters: [{\n          text: 'Male',\n          value: 'male'\n        }, {\n          text: 'Female',\n          value: 'female'\n        }],\n        width: '20%'\n      }, {\n        title: 'Email',\n        dataIndex: 'email'\n      }]\n    };\n\n    this.handleTableChange = (pagination, filters, sorter) => {\n      const pager = { ...this.state.pagination\n      };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager\n      });\n      this.fetch({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters\n      });\n    };\n\n    this.fetch = () => {\n      this.setState({\n        loading: true\n      });\n      $axios({\n        url: 'https://randomuser.me/api?results=10',\n        method: 'get',\n        type: 'json'\n      }).then(data => {\n        const pagination = { ...this.state.pagination\n        }; // Read total count from server\n        // pagination.total = data.totalCount\n\n        pagination.total = 200;\n        this.setState({\n          loading: false,\n          data: data.data.results,\n          pagination\n        });\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.fetch();\n  }\n\n  componentWillUnmount() {\n    // componentWillMount进行异步操作时且在callback中进行了setState操作时，需要在组件卸载时清除state\n    this.setState = () => {\n      return;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shadow-radius\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(_Table, {\n      bordered: true,\n      columns: this.state.columns,\n      dataSource: this.state.data,\n      loading: this.state.loading,\n      onChange: this.handleTableChange,\n      pagination: this.state.pagination,\n      rowKey: record => record.location.postcode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n\nconst _default = TableBasic;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TableBasic, \"TableBasic\", \"/Users/johnlee/Desktop/pharmPOS/react-antd-admin/src/views/table/TableBasic.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/johnlee/Desktop/pharmPOS/react-antd-admin/src/views/table/TableBasic.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/johnlee/Desktop/pharmPOS/react-antd-admin/src/views/table/TableBasic.js"],"names":["React","Component","$axios","TableBasic","state","data","pagination","loading","selectedRowKeys","columns","title","dataIndex","sorter","render","name","first","last","width","filters","text","value","handleTableChange","pager","current","setState","fetch","results","pageSize","page","sortField","field","sortOrder","order","url","method","type","then","total","componentWillMount","componentWillUnmount","record","location","postcode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Table } from 'antd';\nimport $axios from '../../axios/$axios';\n\nclass TableBasic extends Component {\n\tstate = {\n\t\tdata: [],\n\t\tpagination: {},\n\t\tloading: false,\n\t\tselectedRowKeys: [],\n\t\tcolumns: [\n\t\t\t{\n\t\t\t\ttitle: 'Name',\n\t\t\t\tdataIndex: 'name',\n\t\t\t\tsorter: true,\n\t\t\t\trender: name => `${name.first} ${name.last}`,\n\t\t\t\twidth: '20%'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Gender',\n\t\t\t\tdataIndex: 'gender',\n\t\t\t\tfilters: [{ text: 'Male', value: 'male' }, { text: 'Female', value: 'female' }],\n\t\t\t\twidth: '20%'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Email',\n\t\t\t\tdataIndex: 'email'\n\t\t\t}\n\t\t]\n\t};\n\n\tcomponentWillMount() {\n\t\tthis.fetch();\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// componentWillMount进行异步操作时且在callback中进行了setState操作时，需要在组件卸载时清除state\n\t\tthis.setState = () => {\n\t\t\treturn;\n\t\t};\n\t}\n\n\thandleTableChange = (pagination, filters, sorter) => {\n\t\tconst pager = { ...this.state.pagination };\n\t\tpager.current = pagination.current;\n\t\tthis.setState({\n\t\t\tpagination: pager\n\t\t});\n\t\tthis.fetch({\n\t\t\tresults: pagination.pageSize,\n\t\t\tpage: pagination.current,\n\t\t\tsortField: sorter.field,\n\t\t\tsortOrder: sorter.order,\n\t\t\t...filters\n\t\t});\n\t};\n\tfetch = () => {\n\t\tthis.setState({ loading: true });\n\t\t$axios({\n\t\t\turl: 'https://randomuser.me/api?results=10',\n\t\t\tmethod: 'get',\n\t\t\ttype: 'json'\n\t\t}).then(data => {\n\t\t\tconst pagination = { ...this.state.pagination };\n\t\t\t// Read total count from server\n\t\t\t// pagination.total = data.totalCount\n\t\t\tpagination.total = 200;\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t\tdata: data.data.results,\n\t\t\t\tpagination\n\t\t\t});\n\t\t});\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"shadow-radius\">\n\t\t\t\t<Table\n\t\t\t\t\tbordered\n\t\t\t\t\tcolumns={this.state.columns}\n\t\t\t\t\tdataSource={this.state.data}\n\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t\tonChange={this.handleTableChange}\n\t\t\t\t\tpagination={this.state.pagination}\n\t\t\t\t\trowKey={record => record.location.postcode}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TableBasic;\n"]},"metadata":{},"sourceType":"module"}